CREATE TABLE User_Type (
    user_type_id VARCHAR(8) PRIMARY KEY NOT NULL,
    user_type_name VARCHAR(35) NOT NULL UNIQUE
);

CREATE TABLE Users (
    user_id VARCHAR(8) PRIMARY KEY NOT NULL,
    user_type_id VARCHAR(8) NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    user_password VARCHAR(15) NOT NULL UNIQUE,
    mail_adress VARCHAR(255)  UNIQUE,
    phone_number INTEGER(12) UNIQUE,
    inscription_date DATE NOT NULL,
    account_statut BOOLEAN NOT NULL,
    
    FOREIGN KEY (user_type_id) REFERENCES User_Type(user_type_id)
);

CREATE TABLE Employee_Position (
    position_id VARCHAR(8) PRIMARY KEY NOT NULL,
    position_name VARCHAR(35) NOT NULL UNIQUE
);

CREATE TABLE Employee (
    employee_id VARCHAR(8) PRIMARY KEY NOT NULL,
    position_id VARCHAR(8) NOT NULL,
    FOREIGN KEY (position_id) REFERENCES Employee_Position(position_id)
);

CREATE TABLE Student (
    student_id VARCHAR(8) PRIMARY KEY NOT NULL,
    fidelity_point INTEGER(10),
    order_historic_id VARCHAR(8) NOT NULL UNIQUE
);

CREATE TABLE Sponsorship (
    sponsorship_relation_id VARCHAR(8) PRIMARY KEY NOT NULL,
    student_id VARCHAR(8) NOT NULL,
    godchild_id VARCHAR(8) ,
    sponsordhip_code VARCHAR(10) UNIQUE,
    
    FOREIGN KEY(student_id) REFERENCES Student(student_id)
    FOREIGN KEY(godchild_id) REFERENCES Student(student_id)

);

CREATE TABLE Localisation (
    localisation_id VARCHAR(8) PRIMARY KEY NOT NULL,
    localisation_name varchar(255) NOT NULL UNIQUE,
    localisation_delevery_price NUMERIC(19) NOT NULL
);

CREATE TABLE order_statut (
    order_statut_id VARCHAR(8) PRIMARY KEY NOT NULL,
    order_statut_name VARCHAR(35) NOT NULL UNIQUE
);

CREATE TABLE Orders (
    order_id VARCHAR(8) PRIMARY KEY NOT NULL,
    student_id VARCHAR(8) NOT NULL,
    localisation_id VARCHAR(8) NOT NULL,
    order_statut_id VARCHAR(8) NOT NULL,
    order_date DATE NOT NULL,
    
    FOREIGN KEY (student_id) REFERENCES Student(student_id),
    FOREIGN KEY(order_statut_id) REFERENCES order_statut(order_statut_id),
    FOREIGN KEY(localisation_id) REFERENCES Localisation(localisation_id)

);

CREATE TABLE Item_type (
    item_type_id VARCHAR(8) PRIMARY KEY NOT NULL,
    item_type_name varchar(255) NOT NULL UNIQUE
);

CREATE TABLE Item (
    item_id VARCHAR(8) PRIMARY KEY NOT NULL,
    item_type_id VARCHAR(8) NOT NULL,
    name varchar(255) NOT NULL UNIQUE,
    description varchar(255) NOT NULL UNIQUE,
    quantity INTEGER(10) NOT NULL,
    price NUMERIC(19) NOT NULL,
    image_link varchar(255) NOT NULL UNIQUE,
    FOREIGN KEY (item_type_id) REFERENCES Item_type(item_type_id)
);

CREATE TABLE order_item (
    order_item_id VARCHAR(8) PRIMARY KEY NOT NULL,
	item_id VARCHAR(8) NOT NULL,
    order_id VARCHAR(8) NOT NULL,
    item_quantity INTEGER(10) NOT NULL,
    FOREIGN KEY(item_id) REFERENCES Item(item_id),
    FOREIGN KEY (order_id) REFERENCES Orders(order_id)
);

CREATE TABLE Payment (
    payment_method_id VARCHAR(8) PRIMARY KEY NOT NULL,
    method_name VARCHAR(30) NOT NULL UNIQUE,
    payment_date DATE NOT NULL
);

CREATE TABLE Bill (
    bill_id VARCHAR(8) PRIMARY KEY NOT NULL,
    order_id VARCHAR(8) NOT NULL UNIQUE,
    total_cost NUMERIC(19) NOT NULL,
    payment_method_id VARCHAR(8) NOT NULL,
    
    FOREIGN KEY (order_id) REFERENCES Orders(order_id),
    FOREIGN KEY (payment_method_id) REFERENCES Payment(payment_method_id)
    
);

CREATE TABLE Order_Historic (
    historic_id VARCHAR(8) PRIMARY KEY NOT NULL,
    order_id VARCHAR(8) NOT NULL UNIQUE,
    student_id VARCHAR(8) NOT NULL,
    
    FOREIGN KEY (order_id) REFERENCES Orders(order_id) ,
    FOREIGN KEY (student_id) REFERENCES Student(student_id)
);

CREATE TABLE Comments (
    comment_id VARCHAR(8) PRIMARY KEY NOT NULL,
    user_id VARCHAR(8) NOT NULL,
    order_id VARCHAR(8) NOT NULL,
    comment_date DATE NOT NULL,
    comment_content VARCHAR(255),
    
    FOREIGN KEY (order_id) REFERENCES Orders(order_id) ,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE Event_Type (
    event_type_id VARCHAR(8) PRIMARY KEY NOT NULL,
    event_type_name varchar(255) NOT NULL UNIQUE
);

CREATE TABLE Special_Event (
    event_id VARCHAR(8) PRIMARY KEY NOT NULL,
    event_type_id VARCHAR(8)  NOT NULL,
    event_name varchar(255) NOT NULL UNIQUE,
    event_starting_date DATE NOT NULL,
    event_ending_date DATE NOT NULL,
    event_description VARCHAR(255) UNIQUE,
    
    FOREIGN KEY(event_type_id) REFERENCES Event_Type (event_type_id)
);

CREATE TABLE VIP_members (
    vip_id VARCHAR(8) PRIMARY KEY NOT NULL,
    student_id VARCHAR(8)  NOT NULL,
    vip_starting_date DATE NOT NULL,
    vip_ending_date DATE NOT NULL,
    
    FOREIGN KEY(student_id) REFERENCES Student (student_id)
);

